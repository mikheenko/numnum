import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'language_manager.dart';

class AppLocalizations {
  static const Map<String, Map<String, String>> _localizedValues = {
    'ru': {
      'app_title': '–ù—É–º–ù—É–º',
      'app_subtitle': '–ò–∑—É—á–∞–π —Ç–∞–±–ª–∏—Ü—É —É–º–Ω–æ–∂–µ–Ω–∏—è',
      'settings': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
      'start_training': '–ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É',
      'duel': '–î—É—ç–ª—å',
      'pythagoras_table': '–¢–∞–±–ª–∏—Ü–∞ –ü–∏—Ñ–∞–≥–æ—Ä–∞',
      'solved_today': '–†–µ—à–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è',
      'accuracy': '–¢–æ—á–Ω–æ—Å—Ç—å',
      'win_streak': '–°–µ—Ä–∏—è –ø–æ–±–µ–¥',
      'total_solved': '–í—Å–µ–≥–æ —Ä–µ—à–µ–Ω–æ',
      'multiplication_table': '–¢–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è',
      'multiplication_tables': '–¢–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è',
      'multiplication_tables_description': '–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å',
      'language': '–Ø–∑—ã–∫',
      'theme': '–¢–µ–º–∞',
      'select_numbers': '–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–∏–µ —á–∏—Å–ª–∞ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö –∏ –¥—É—ç–ª—è—Ö. –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω–æ –º–∏–Ω–∏–º—É–º –æ–¥–Ω–æ —á–∏—Å–ª–æ.',
      'select_all': '–í—ã–±—Ä–∞—Ç—å –≤—Å–µ',
      'reset': '–°–±—Ä–æ—Å–∏—Ç—å',
      'select_numbers_title': '–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è',
      'theme_light': '–°–≤–µ—Ç–ª–∞—è',
      'theme_dark': '–¢–µ–º–Ω–∞—è',
      'theme_system': '–°–∏—Å—Ç–µ–º–Ω–∞—è',
      'russian': '–†—É—Å—Å–∫–∏–π',
      'english': 'English',
      'german': 'Deutsch',
      'min': '–º–∏–Ω',
      'practice': '–ü—Ä–∞–∫—Ç–∏–∫–∞',
      'theory': '–¢–µ–æ—Ä–∏—è',
      'interesting_facts': '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã',
      'enter_answer': '–í–≤–µ–¥–∏—Ç–µ\n5√ó5=?',
      'math_fact_1': '–¢–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è –±—ã–ª–∞ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∞ –±–æ–ª–µ–µ 4000 –ª–µ—Ç –Ω–∞–∑–∞–¥ –≤ –î—Ä–µ–≤–Ω–µ–º –í–∞–≤–∏–ª–æ–Ω–µ! üèõÔ∏è',
      'math_fact_2': '–ó–Ω–∞–µ—à—å –ª–∏ —Ç—ã, —á—Ç–æ —É–º–Ω–æ–∂–µ–Ω–∏–µ –Ω–∞ 9 –¥–∞—ë—Ç –æ—Å–æ–±—ã–π —É–∑–æ—Ä? –°—É–º–º–∞ —Ü–∏—Ñ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—Å–µ–≥–¥–∞ —Ä–∞–≤–Ω–∞ 9! üî¢',
      'math_fact_3': '–í –ö–∏—Ç–∞–µ –¥–µ—Ç–∏ —É—á–∞—Ç —Ç–∞–±–ª–∏—Ü—É —É–º–Ω–æ–∂–µ–Ω–∏—è –¥–æ 19√ó19, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –¥–æ 10√ó10! üá®üá≥',
      'math_fact_4': '–ï—Å–ª–∏ —É–º–Ω–æ–∂–∏—Ç—å –ª—é–±–æ–µ —á–∏—Å–ª–æ –Ω–∞ 11, —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ: –ø—Ä–æ—Å—Ç–æ "—Ä–∞–∑–¥–≤–∏–Ω—å" —Ü–∏—Ñ—Ä—ã –∏ —Å–ª–æ–∂–∏ —Å–æ—Å–µ–¥–Ω–∏–µ! ‚ú®',
      'math_fact_5': '–¢–∞–±–ª–∏—Ü–∞ –ü–∏—Ñ–∞–≥–æ—Ä–∞ –Ω–∞–∑–≤–∞–Ω–∞ –≤ —á–µ—Å—Ç—å –¥—Ä–µ–≤–Ω–µ–≥—Ä–µ—á–µ—Å–∫–æ–≥–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞, –Ω–æ –æ–Ω –µ—ë –Ω–µ –∏–∑–æ–±—Ä–µ—Ç–∞–ª! üè∫',
      'math_fact_6': '–°–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π —Å–ø–æ—Å–æ–± —É–º–Ω–æ–∂–µ–Ω–∏—è –Ω–∞ 5: —É–º–Ω–æ–∂—å –Ω–∞ 10 –∏ —Ä–∞–∑–¥–µ–ª–∏ –ø–æ–ø–æ–ª–∞–º! ‚ö°',
      'math_fact_7': '–í –ø—Ä–∏—Ä–æ–¥–µ –º–Ω–æ–≥–æ –ø—Ä–∏–º–µ—Ä–æ–≤ —É–º–Ω–æ–∂–µ–Ω–∏—è: –ª–µ–ø–µ—Å—Ç–∫–∏ —Ü–≤–µ—Ç–æ–≤, –ª–∏—Å—Ç—å—è —Ä–∞—Å—Ç–µ–Ω–∏–π —á–∞—Å—Ç–æ —Ä–∞—Å—Ç—É—Ç –ø–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–∫–æ–Ω–∞–º! üå∏',
      'math_fact_8': '–ó–Ω–∞–µ—à—å –ª–∏ —Ç—ã, —á—Ç–æ 12√ó12=144, –∞ 21√ó21=441? –≠—Ç–æ –Ω–µ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å! üîÑ',
      'math_fact_9': '–ê—Ä–∞–±—Å–∫–∏–µ —Ü–∏—Ñ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã –ø–æ–ª—å–∑—É–µ–º—Å—è, –ø—Ä–∏—à–ª–∏ –∫ –Ω–∞–º –∏–∑ –ò–Ω–¥–∏–∏ —á–µ—Ä–µ–∑ –∞—Ä–∞–±—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω—ã! üåç',
      'math_fact_10': '–£–º–Ω–æ–∂–µ–Ω–∏–µ –Ω–∞ 10 - —Å–∞–º–æ–µ –ø—Ä–æ—Å—Ç–æ–µ: –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤—å –Ω–æ–ª—å –≤ –∫–æ–Ω—Ü–µ! üîü',
      
      // Modal dialogs
      'exit_lesson_title': '–í—ã–π—Ç–∏ –∏–∑ —É—Ä–æ–∫–∞?',
      'exit_lesson_message': '–ü—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω.',
      'cancel': '–û—Ç–º–µ–Ω–∞',
      'exit': '–í—ã–π—Ç–∏',
      'duel_title': '–î—É—ç–ª—å',
      'duel_countdown': '–î—É—ç–ª—å –Ω–∞—á–Ω–µ—Ç—Å—è —á–µ—Ä–µ–∑',
      'duel_ready': '–ì–æ—Ç–æ–≤—ã –∫ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –¥—É—ç–ª–∏?',
      'start': '–ù–∞—á–∞—Ç—å',
      'tie': '–ù–∏—á—å—è!',
      'player_wins': '–ü–æ–±–µ–¥–∏–ª –∏–≥—Ä–æ–∫',
      'player_1': '–ò–≥—Ä–æ–∫ 1',
      'player_2': '–ò–≥—Ä–æ–∫ 2',
      'play_again': '–ï—â–µ —Ä–∞–∑',
      'reset_progress_title': '–°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å?',
      'reset_progress_message': '–í—Å–µ —Ä–µ—à–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü–µ –±—É–¥—É—Ç –æ—á–∏—â–µ–Ω—ã.',
      'reset_action': '–°–±—Ä–æ—Å–∏—Ç—å',
      'hint_button': 'üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞',
      'done': '–ì–æ—Ç–æ–≤–æ!',
      'correct': '–í–µ—Ä–Ω–æ!',
      'incorrect': '–Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç :(',
      'pause_title': '–ü–∞—É–∑–∞',
      'pause_message': '–î—É—ç–ª—å –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞',
      'resume': '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å',
      'exit_duel': '–í—ã–π—Ç–∏ –∏–∑ –¥—É—ç–ª–∏',
      // Parent metrics
      'parent_days_streak': '–î–Ω–µ–π –ø–æ–¥—Ä—è–¥',
      'parent_trainings_today': '–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ —Å–µ–≥–æ–¥–Ω—è',
      'parent_trainings_total': '–í—Å–µ–≥–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫',
    },
    'en': {
      'app_title': 'NumNum',
      'app_subtitle': 'Learn multiplication table',
      'settings': 'Settings',
      'start_training': 'Start Training',
      'duel': 'Duel',
      'pythagoras_table': 'Pythagoras Table',
      'solved_today': 'Solved Today',
      'accuracy': 'Accuracy',
      'win_streak': 'Win Streak',
      'total_solved': 'Total Solved',
      'multiplication_table': 'Multiplication Table',
      'multiplication_tables': 'Multiplication Tables',
      'multiplication_tables_description': 'Select the numbers you want to practice',
      'language': 'Language',
      'theme': 'Theme',
      'select_numbers': 'Select which numbers will be used in training and duels. At least one number must be selected.',
      'select_all': 'Select All',
      'reset': 'Reset',
      'select_numbers_title': 'Select numbers to study',
      'theme_light': 'Light',
      'theme_dark': 'Dark',
      'theme_system': 'System',
      'russian': '–†—É—Å—Å–∫–∏–π',
      'english': 'English',
      'german': 'Deutsch',
      'min': 'min',
      'practice': 'Practice',
      'theory': 'Theory',
      'interesting_facts': 'Interesting Facts',
      'enter_answer': 'Enter\n5√ó5=?',
      'math_fact_1': 'The multiplication table was invented over 4000 years ago in ancient Babylon! üèõÔ∏è',
      'math_fact_2': 'Did you know that multiplying by 9 creates a special pattern? The sum of digits always equals 9! üî¢',
      'math_fact_3': 'In China, children learn multiplication tables up to 19√ó19, not just 10√ó10! üá®üá≥',
      'math_fact_4': 'To multiply any number by 11 quickly: just "spread" the digits and add adjacent ones! ‚ú®',
      'math_fact_5': 'The Pythagoras table is named after the ancient Greek mathematician, but he didn\'t invent it! üè∫',
      'math_fact_6': 'The fastest way to multiply by 5: multiply by 10 and divide by half! ‚ö°',
      'math_fact_7': 'Nature has many examples of multiplication: flower petals and plant leaves often grow according to mathematical laws! üå∏',
      'math_fact_8': 'Did you know that 12√ó12=144 and 21√ó21=441? This is not a coincidence! üîÑ',
      'math_fact_9': 'The Arabic numerals we use came to us from India through Arab countries! üåç',
      'math_fact_10': 'Multiplying by 10 is the simplest: just add a zero at the end! üîü',
      
      // Modal dialogs
      'exit_lesson_title': 'Exit lesson?',
      'exit_lesson_message': 'Progress will be lost.',
      'cancel': 'Cancel',
      'exit': 'Exit',
      'duel_title': 'Duel',
      'duel_countdown': 'Duel will start in',
      'duel_ready': 'Ready for a math duel?',
      'start': 'Start',
      'tie': 'Tie!',
      'player_wins': 'Player wins',
      'player_1': 'Player 1',
      'player_2': 'Player 2',
      'play_again': 'Play Again',
      'reset_progress_title': 'Reset progress?',
      'reset_progress_message': 'All solutions in the table will be cleared.',
      'reset_action': 'Reset',
      'hint_button': 'üí° Hint',
      'done': 'Done!',
      'correct': 'Correct!',
      'incorrect': 'doesn\'t fit :(',
      'pause_title': 'Pause',
      'pause_message': 'Duel paused',
      'resume': 'Resume',
      'exit_duel': 'Exit duel',
      // Parent metrics
      'parent_days_streak': 'Days in a row',
      'parent_trainings_today': 'Trainings today',
      'parent_trainings_total': 'Total trainings',
    },
    'de': {
      'app_title': 'NumNum',
      'app_subtitle': 'Lerne das Einmaleins',
      'settings': 'Einstellungen',
      'start_training': 'Training starten',
      'duel': 'Duell',
      'pythagoras_table': 'Pythagoras-Tabelle',
      'solved_today': 'Heute gel√∂st',
      'accuracy': 'Genauigkeit',
      'win_streak': 'Siegesserie',
      'total_solved': 'Gesamt gel√∂st',
      'multiplication_table': 'Einmaleins',
      'multiplication_tables': 'Einmaleins',
      'multiplication_tables_description': 'W√§hle die Zahlen zum √úben aus',
      'language': 'Sprache',
      'theme': 'Design',
      'select_numbers': 'W√§hlen Sie aus, welche Zahlen in Training und Duellen verwendet werden. Mindestens eine Zahl muss ausgew√§hlt werden.',
      'select_all': 'Alle ausw√§hlen',
      'reset': 'Zur√ºcksetzen',
      'select_numbers_title': 'Zahlen zum Lernen ausw√§hlen',
      'theme_light': 'Hell',
      'theme_dark': 'Dunkel',
      'theme_system': 'System',
      'russian': '–†—É—Å—Å–∫–∏–π',
      'english': 'English',
      'german': 'Deutsch',
      'min': 'min',
      'practice': 'Praxis',
      'theory': 'Theorie',
      'interesting_facts': 'Interessante Fakten',
      'enter_answer': 'Eingeben\n5√ó5=?',
      'math_fact_1': 'Das Einmaleins wurde vor √ºber 4000 Jahren im alten Babylon erfunden! üèõÔ∏è',
      'math_fact_2': 'Wusstest du, dass die Multiplikation mit 9 ein besonderes Muster ergibt? Die Quersumme ist immer 9! üî¢',
      'math_fact_3': 'In China lernen Kinder das Einmaleins bis 19√ó19, nicht nur bis 10√ó10! üá®üá≥',
      'math_fact_4': 'Um schnell mit 11 zu multiplizieren: einfach die Ziffern "spreizen" und benachbarte addieren! ‚ú®',
      'math_fact_5': 'Die Pythagoras-Tabelle ist nach dem griechischen Mathematiker benannt, aber er hat sie nicht erfunden! üè∫',
      'math_fact_6': 'Der schnellste Weg, mit 5 zu multiplizieren: mit 10 multiplizieren und halbieren! ‚ö°',
      'math_fact_7': 'Die Natur hat viele Beispiele f√ºr Multiplikation: Bl√ºtenbl√§tter und Pflanzenbl√§tter wachsen oft nach mathematischen Gesetzen! üå∏',
      'math_fact_8': 'Wusstest du, dass 12√ó12=144 und 21√ó21=441? Das ist kein Zufall! üîÑ',
      'math_fact_9': 'Die arabischen Ziffern, die wir verwenden, kamen √ºber arabische L√§nder aus Indien zu uns! üåç',
      'math_fact_10': 'Die Multiplikation mit 10 ist am einfachsten: einfach eine Null anh√§ngen! üîü',
      
      // Modal dialogs
      'exit_lesson_title': 'Lektion verlassen?',
      'exit_lesson_message': 'Der Fortschritt geht verloren.',
      'cancel': 'Abbrechen',
      'exit': 'Verlassen',
      'duel_title': 'Duell',
      'duel_countdown': 'Das Duell beginnt in',
      'duel_ready': 'Bereit f√ºr ein Mathe-Duell?',
      'start': 'Starten',
      'tie': 'Unentschieden!',
      'player_wins': 'Spieler gewinnt',
      'player_1': 'Spieler 1',
      'player_2': 'Spieler 2',
      'play_again': 'Nochmal',
      'reset_progress_title': 'Fortschritt zur√ºcksetzen?',
      'reset_progress_message': 'Alle L√∂sungen in der Tabelle werden gel√∂scht.',
      'reset_action': 'Zur√ºcksetzen',
      'hint_button': 'üí° Hinweis',
      'done': 'Fertig!',
      'correct': 'Richtig!',
      'incorrect': 'passt nicht :(',
      'pause_title': 'Pause',
      'pause_message': 'Duell pausiert',
      'resume': 'Fortsetzen',
      'exit_duel': 'Duell verlassen',
      // Parent metrics
      'parent_days_streak': 'Tage in Folge',
      'parent_trainings_today': 'Trainings heute',
      'parent_trainings_total': 'Trainings insgesamt',
    },
  };

  /// Get localized string for current language
  /// For use within widget build context  
  static String get(String key, [BuildContext? context]) {
    String currentLanguage = 'ru'; // fallback
    
    if (context != null) {
      try {
        // Try to get language from Provider
        final languageManager = Provider.of<LanguageManager>(context, listen: false);
        currentLanguage = languageManager.currentLanguage;
      } catch (e) {
        // Fallback to singleton if Provider is not available
        currentLanguage = LanguageManager().currentLanguage;
      }
    } else {
      // No context provided, use singleton
      currentLanguage = LanguageManager().currentLanguage;
    }
    
    return _localizedValues[currentLanguage]?[key] ?? 
           _localizedValues['ru']?[key] ?? 
           key;
  }

  /// Get current language code
  static String get currentLanguage => LanguageManager().currentLanguage;

  /// Set language (delegates to LanguageManager)
  static Future<void> setLanguage(String languageCode) async {
    await LanguageManager().setLanguage(languageCode);
  }
} 